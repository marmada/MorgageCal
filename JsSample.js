function Ga(e) { var t = jQuery("#mortgagecalculatorform").find(":input").get(); return "object" != typeof e ? (e = {}, jQuery.each(t, function () { this.name && (this.checked || /select|textarea/i.test(this.nodeName) || /text|hidden|password/i.test(this.type)) && "mortgagedata" != this.name && (e[this.name] = jQuery(this).val()) }), e) : (jQuery.each(t, function () { this.name && e[this.name] ? "checkbox" == this.type || "radio" == this.type ? (jQuery(this).prop("checked", e[this.name] == jQuery(this).val()), e[this.name] == jQuery(this).val() ? (jQuery(this).parent(".btn").addClass("active"), jQuery(this).parent(".btn").siblings().removeClass("active")) : (jQuery(this).parent(".btn").removeClass("active"), jQuery(this).parent(".btn").siblings().addClass("active"))) : jQuery(this).val(e[this.name]) : "checkbox" == this.type && jQuery(this).prop("checked", !1) }), jQuery(this)) } function $a(e, t) { var a; return a = 12 * (t.getFullYear() - e.getFullYear()), a -= e.getMonth(), a += t.getMonth() } function ab(e) { return Base64.encode(unescape(encodeURIComponent(e))) } function W(e) { return 1 * Math.abs(jQuery(e).val().replace(/[^\d\.]/g, "")) } function bb(e) { var t = e.which || e.keyCode; return "keyup" == e.type && (9 === t || 16 === t) } function cb(e) { return 10 > e.getDate() ? "0" + e.getDate() + "-" + Ea[e.getMonth()] + " " + e.getFullYear() : e.getDate() + "-" + Ea[e.getMonth()] + " " + e.getFullYear() } function db(e) { return 12 == ca ? Ea[e.getMonth()] : 10 > e.getDate() ? "0" + e.getDate() + "-" + Ea[e.getMonth()] : e.getDate() + "-" + Ea[e.getMonth()] } function Y(e) { var t = 1 * Globalize.format(1 * e, "n", "en-US").replace(/[^\d\.]/g, ""); return +t !== t || t % 1 ? Globalize.format(1 * e, "n", "en-US") : Globalize.format(1 * e, "n0", "en-US") } function Z(e, t) { return e = Math.abs(e), t = "undefined" == typeof t ? 3 : Math.abs(t), (1 * Globalize.format(1 * e, "n" + t, "en-US").replace(/[^\d\.]/g, "")).toString() } function Ja(e, t, a) { var r; return a = "undefined" == typeof a ? 1 * t : Math.abs(a), e.val(Z(t, "undefined" == typeof r ? 2 : r)), (t = e.data("lastInput") != a) && e.data("lastInput", a), t } function V(e, t, a) { t = "undefined" == typeof t ? null : Z(t), a = "undefined" == typeof a ? null : Y(a), e.val(t); var r = e.data("lastInputPercentage") != t; return r && (e.data("lastInputPercentage", t), e.data("lastInputDollar", a)), r } function U(e, t, a) { t = "undefined" == typeof t ? null : Y(t), a = "undefined" == typeof a ? null : Z(a), e.val(t); var r = e.data("lastInputDollar") != t; return r && (e.data("lastInputDollar", t), e.data("lastInputPercentage", a)), r } function Fa(e, t) { jQuery(e).attr("readonly", !0), jQuery(e).datepicker({ format: "dd-M yyyy", autoclose: !0 }).on("changeDate", function () { if (jQuery(this).datepicker("getDate").toDateString() != t.c.toDateString()) { t.c = jQuery(this).datepicker("getDate"); var a = !1; "#startdate" == e && (a = !0), "#extraperiodicstartdate" == e && A && (a = !0), "#extraquarterlystartdate" == e && C && (a = !0), "#extrayearlystartdate" == e && B && (a = !0), "#extraonetimestartdate" == e && pa && (a = !0), a && X() } }).on("hide", function () { jQuery(e).blur() }), t.c = new Date, t.c.setHours(0, 0, 0, 0, 0), jQuery(e).datepicker("setDate", t.c) } function Ha(e) { if (0 < (selDate = jQuery(e).val()).length) { Ca = selDate.substring(selDate.length - 4, selDate.length), Ba = jQuery.inArray(selDate.substring(3, selDate.length - 5), Ea), day = selDate.substring(0, selDate.length - 9); var t = new Date(Ca, Ba, day); t.setHours(0, 0, 0, 0, 0), jQuery(e).datepicker("setDate", t) } } function Ka() { jQuery(".extratoggle").click(function () { return jQuery("#extrapayments").slideToggle(), jQuery(".addextrapayments").toggle(), jQuery(".removeextrapayments").toggle(), jQuery(".addextrapayments").is(":visible") ? (U(jQuery("#extraperiodic"), 0), U(jQuery("#extraquarterly"), 0), U(jQuery("#extrayearly"), 0), U(jQuery("#extraonetime"), 0), Fa("#extraperiodicstartdate", ta), Fa("#extraquarterlystartdate", ua), Fa("#extrayearlystartdate", va), Fa("#extraonetimestartdate", wa), E && X()) : jQuery("#extraperiodic").focus(), !1 }) } function Xa() { jQuery("#mortgagecalculatorform input[name='downpaymententry']").change(function () { jQuery("#downpayment").val(jQuery("#mortgagecalculatorform input[name='downpaymententry']")[0].checked ? w : oa) }), jQuery("#mortgagecalculatorform input[name='mortgagetenure']").change(function () { jQuery("#mortgageterm").val(jQuery("#mortgagecalculatorform input[name='mortgagetenure']")[0].checked ? Math.round(W("#mortgageterm") / 12 * 100) / 100 : Math.round(12 * W("#mortgageterm"))) }), jQuery("#mortgagecalculatorform input[name='hoientry']").change(function () { jQuery("#hoi").val(jQuery("#mortgagecalculatorform input[name='hoientry']")[0].checked ? ma : na) }), jQuery("#mortgagecalculatorform input[name='propertytaxesentry']").change(function () { jQuery("#propertytaxes").val(jQuery("#mortgagecalculatorform input[name='propertytaxesentry']")[0].checked ? la : ka) }), jQuery("#mortgagecalculatorform input[name='pmientry']").change(function () { jQuery("#pmi").val(jQuery("#mortgagecalculatorform input[name='pmientry']")[0].checked ? ga : fa) }), jQuery("#mortgagecalculatorform input[name='onetimeexpensesentry']").change(function () { jQuery("#onetimeexpenses").val(jQuery("#mortgagecalculatorform input[name='onetimeexpensesentry']")[0].checked ? ja : ia) }), jQuery("input[name='paymentfrequency']").change(function () { X() }) } function Ya() { jQuery(".usmoprint").click(function () { return window.print(), !1 }) } function Za() { jQuery(".usmoshare").click(function () { jQuery("#loader").toggle(); var e = Ga(), e = ab(JSON.stringify(e)); return jQuery.get("https://usmortgagecalculator.org/bitly/?longURL=https://usmortgagecalculator.org/?mcdata=" + e, function (e) { jQuery("#sharelink").val(e), jQuery("#usmosharelink").slideDown(), jQuery("#loader").toggle() }), !1 }), jQuery("#sharelink").click(function () { jQuery(this).focus().select() }) } function La(e) { bb(e) || U(jQuery(this), W("#" + jQuery(this).attr("id"))) && X() } function Ma(e) { !bb(e) && U(jQuery(this), W("#hoad")) && (q = W("#hoad"), X()) } function Na(e) { if (!bb(e) && U(jQuery(this), W("#homeprice"))) { c = W("#homeprice"), e = jQuery("#downpayment"); var t = W("#downpayment"); t > c ? (g = 0, V(e, 0)) : jQuery("#mortgagecalculatorform input[name='downpaymententry']")[0].checked ? (g = Math.abs(c * t / 100), V(e, t, g)) : jQuery("#mortgagecalculatorform input[name='downpaymententry']")[1].checked && (g = t, U(e, g, Math.abs(100 * g / c))), U(jQuery("#mortgageamount"), c - g), f = W("#mortgageamount"), eb(), X() } } function Oa(e) { if (!bb(e)) if (e = jQuery(this), jQuery("#mortgagecalculatorform input[name='downpaymententry']")[0].checked) { var t = W("#downpayment"); t > 100 && (t = 0), V(e, t, Math.abs(c * t / 100)) && (g = Math.abs(c * t / 100), fb(), X()) } else jQuery("#mortgagecalculatorform input[name='downpaymententry']")[1].checked && (t = W("#downpayment"), t > c && (t = 0), U(e, t, Math.abs(100 * t / c)) && (g = t, fb(), X())) } function Pa(e) { !bb(e) && U(jQuery(this), W("#mortgageamount")) && (f = W("#mortgageamount"), e = jQuery("#downpayment"), f >= c ? (g = 0, V(e, 0)) : jQuery("#mortgagecalculatorform input[name='downpaymententry']")[0].checked ? (g = c - f, V(e, Math.abs(100 * g / c), g)) : jQuery("#mortgagecalculatorform input[name='downpaymententry']")[1].checked && (g = c - f, U(e, g, Math.abs(100 * g / c))), eb(), X()) } function eb() { jQuery("#mortgagecalculatorform input[name='pmientry']")[0].checked && (w = Z(100 * g / c), 5 > w ? V(jQuery("#pmi"), 1.03, Math.abs(1.03 * f / 100)) : w >= 5 && 10 > w ? V(jQuery("#pmi"), .875, Math.abs(.875 * f / 100)) : w >= 10 && 15 > w ? V(jQuery("#pmi"), .625, Math.abs(.625 * f / 100)) : w >= 15 && 20 > w ? V(jQuery("#pmi"), .375, Math.abs(.375 * f / 100)) : V(jQuery("#pmi"), 0), p = Math.abs(W("#pmi") / 12 / 100)) } function fb() { U(jQuery("#mortgageamount"), c - g), f = W("#mortgageamount"), eb() } function Va(e) { if (!bb(e)) if (e = jQuery(this), jQuery("#mortgagecalculatorform input[name='pmientry']")[0].checked) { var t = W("#pmi"); V(e, t, Math.abs(f * t / 100)) && (p = Math.abs(W("#pmi") / 12 / 100), X()) } else jQuery("#mortgagecalculatorform input[name='pmientry']")[1].checked && (t = W("#pmi"), U(e, t, Math.abs(100 * t / f)) && (p = Math.abs(100 * W("#pmi") / f / 12 / 100), X())) } function Ta(e) { if (!bb(e)) if (e = jQuery(this), jQuery("#mortgagecalculatorform input[name='hoientry']")[0].checked) { var t = W("#hoi"); V(e, t, Math.abs(c * t / 100)) && (n = Math.abs(W("#hoi") / 12 / 100), X()) } else jQuery("#mortgagecalculatorform input[name='hoientry']")[1].checked && (t = W("#hoi"), U(e, t, Math.abs(100 * t / c)) && (n = Math.abs(100 * W("#hoi") / c / 12 / 100), X())) } function Wa(e) { if (!bb(e)) if (e = jQuery(this), jQuery("#mortgagecalculatorform input[name='onetimeexpensesentry']")[0].checked) { var t = W("#onetimeexpenses"); V(e, t, Math.abs(c * t / 100)) && (ba = Math.abs(c * t / 100), X()) } else jQuery("#mortgagecalculatorform input[name='onetimeexpensesentry']")[1].checked && (t = W("#onetimeexpenses"), U(e, t, Math.abs(100 * t / c)) && (ba = t, X())) } function Ua(e) { if (!bb(e)) if (e = jQuery(this), jQuery("#mortgagecalculatorform input[name='propertytaxesentry']")[0].checked) { var t = W("#propertytaxes"); V(e, t, Math.abs(c * t / 100)) && (m = Math.abs(W("#propertytaxes") / 12 / 100), X()) } else jQuery("#mortgagecalculatorform input[name='propertytaxesentry']")[1].checked && (t = W("#propertytaxes"), U(e, t, Math.abs(100 * t / c)) && (m = Math.abs(100 * W("#propertytaxes") / c / 12 / 100), X())) } function Ra(e) { bb(e) || (e = jQuery(this), V(e, W("#mortgageinterest")) && (h = Math.abs(W("#mortgageinterest") / 12 / 100), X())) } function Sa(e) { bb(e) || (e = jQuery(this), jQuery("#mortgagecalculatorform input[name='mortgagetenure']")[0].checked ? (e = Math.abs(Math.round(Math.round(12 * e.val().replace(/[^\d\.]/g, "")) / 12 * 100) / 100), Ja(jQuery(this), e, Math.round(12 * e)) && (k = Math.abs(Math.round(12 * W("#mortgageterm"))), X())) : Ja(jQuery(this), Math.abs(Math.round(W("#mortgageterm"))), Math.abs(Math.round(W("#mortgageterm")))) && (k = W("#mortgageterm"), X())) } function X() { jQuery("#mortgagecalculatorform").mask("Calculating Mortgage Payment..."), setTimeout(gb, 10) } function gb() { if ("monthly" == jQuery("input[name='paymentfrequency']:checked").val()) { ca = 12, jQuery("#usmosharelink").hide(), c = W("#homeprice"), f = W("#mortgageamount"), .8 * c >= f && V(jQuery("#pmi"), 0), jQuery("#mortgagecalculatorform input[name='downpaymententry']")[0].checked ? (w = Z(W("#downpayment")), oa = Y(c - f)) : (oa = Y(W("#downpayment")), w = Z(100 * oa.replace(/[^\d\.]/g, "") / c)), g = 1 * oa.replace(/[^\d\.]/g, ""), h = Math.abs(jQuery("#mortgageinterest").val() / 12 / 100), 0 == h && (V(jQuery("#mortgageinterest"), 5), h = .00416666666), jQuery("#mortgagecalculatorform input[name='hoientry']")[0].checked ? (n = Math.abs(W("#hoi") / 12 / 100), ma = Z(W("#hoi")), na = Y(1200 * n / 100 * c)) : (n = Math.abs(100 * W("#hoi") / c / 12 / 100), na = Y(W("#hoi")), ma = Z(1200 * n)), jQuery("#mortgagecalculatorform input[name='propertytaxesentry']")[0].checked ? (m = Math.abs(W("#propertytaxes") / 12 / 100), la = Z(W("#propertytaxes")), ka = Y(1200 * m / 100 * c)) : (m = Math.abs(100 * W("#propertytaxes") / c / 12 / 100), ka = Y(W("#propertytaxes")), la = Z(1200 * m)), jQuery("#mortgagecalculatorform input[name='pmientry']")[0].checked ? (p = Math.abs(W("#pmi") / 12 / 100), ga = Z(W("#pmi")), fa = Y(1200 * p / 100 * f)) : (p = Math.abs(100 * W("#pmi") / f / 12 / 100), fa = Y(W("#pmi")), ga = Z(1200 * p)), jQuery("#mortgagecalculatorform input[name='onetimeexpensesentry']")[0].checked ? (ja = Z(W("#onetimeexpenses")), ia = Y(ja / 100 * c)) : (ia = Y(W("#onetimeexpenses")), ja = Z(100 * ia.replace(/[^\d\.]/g, "") / c)), ba = 1 * ia.replace(/[^\d\.]/g, ""), q = W("#hoad"), jQuery("#mortgagecalculatorform input[name='mortgagetenure']")[0].checked ? (0 >= jQuery("#mortgageterm").val() && Ja(jQuery("#mortgageterm"), 30, 360), k = Math.abs(Math.round(12 * jQuery("#mortgageterm").val()))) : (0 >= jQuery("#mortgageterm").val() && Ja(jQuery("#mortgageterm"), 360), k = Math.abs(1 * jQuery("#mortgageterm").val())), A = W("#extraperiodic"), C = W("#extraquarterly"), B = W("#extrayearly"), pa = W("#extraonetime"), E = !1, (A || B || pa || C) && (E = !0), E && jQuery(".addextrapayments").is(":visible") && (jQuery("#extrapayments").slideToggle(), jQuery(".addextrapayments").toggle(), jQuery(".removeextrapayments").toggle()), E && hb(), l = Math.pow(1 + h, k) / (Math.pow(1 + h, k) - 1) * h * f, periodicPayment = l + A + c * m + c * n + f * p + q, jQuery("#periodicprincipalandinterestterm").text("Monthly Principal & Interest"), jQuery("#periodicterm").text("Total Monthly Payment"), jQuery("#periodicprincipalandinterestdef").text(Globalize.format(l, "c", "en-US")), jQuery("#extradef").text(Globalize.format(A, "c", "en-US")), jQuery("#periodicpropertytaxesdef").text(Globalize.format(ka.replace(/[^\d\.]/g, "") / 12, "c", "en-US")), jQuery("#periodichoidef").text(Globalize.format(na.replace(/[^\d\.]/g, "") / 12, "c", "en-US")), jQuery("#periodicpmidef").text(f > .8 * c ? Globalize.format(fa.replace(/[^\d\.]/g, "") / 12, "c", "en-US") : Globalize.format(0, "c", "en-US")), jQuery("#periodichoaddef").text(Globalize.format(q, "c", "en-US")), jQuery("#periodicpayment").text(Globalize.format(periodicPayment, "c", "en-US")), G = [], H = [], I = [], K = [], J = [], L = [], Da = [], M = [], N = [], S = [], O = [], P = [], Q = [], T = [], D = v = u = t = 0, da = ea = null, sa = ra = !1, qa = k, M[0] = new Date(F.c.getTime()), O[0] = f * h, N[0] = l - O[0], P[0] = f > .8 * c ? c * m + c * n + q + f * p : c * m + c * n + q, S[0] = E ? lb(M[0]) + mb(M[0]) + nb(M[0]) + ob(M[0]) : 0, Q[0] = f - N[0] - S[0], T[0] = (f - Q[0]) / f * 100; var e = M[0].getFullYear(), a = 0; G[a++] = e, H[e] = N[0], I[e] = O[0], K[e] = S[0], J[e] = P[0], L[e] = Q[0], Da[e] = T[0], t += N[0], u += O[0], v += P[0], D += S[0]; for (var r = 1; 0 < Q[r - 1] && k > r;)M[r] = new Date(M[r - 1].getTime()), M[0].getDate() > new Date(M[r].getFullYear(), M[r].getMonth() + 2, 0).getDate() ? M[r].setMonth(M[r].getMonth() + 2, 0) : M[r].setMonth(M[r].getMonth() + 1, M[0].getDate()), O[r] = Q[r - 1] * h, N[r] = l - O[r], S[r] = E ? lb(M[r]) + mb(M[r]) + nb(M[r]) + ob(M[r]) : 0, (Q[r - 1] < N[r] + S[r] || r == k - 1) && ((Q[r - 1] < N[r] || r == k - 1) && (N[r] = Q[r - 1]), S[r] = Q[r - 1] - N[r]), !da && Q[r - 1] > .8 * c ? P[r] = c * m + c * n + q + f * p : (da || (da = M[r - 1]), P[r] = c * m + c * n + q), Q[r] = Q[r - 1] - N[r] - S[r], T[r] = (f - Q[r]) / f * 100, M[r].getFullYear() != e && (e = M[r].getFullYear(), G[a++] = e, H[e] = 0, I[e] = 0, K[e] = 0, J[e] = 0, L[e] = 0, Da[e] = 0), H[e] += N[r], I[e] += O[r], K[e] += S[r], J[e] += P[r], L[e] = Q[r], Da[e] = T[r], t += N[r], u += O[r], v += P[r], D += S[r], r++; qa = M.length, ea = M[qa - 1], Q[qa - 1] = 0, L[e] = 0, T[qa - 1] = 100, Da[e] = 100 } else { ca = 26, jQuery("#usmosharelink").hide(), c = W("#homeprice"), f = W("#mortgageamount"), .8 * c >= f && V(jQuery("#pmi"), 0), jQuery("#mortgagecalculatorform input[name='downpaymententry']")[0].checked ? (w = Z(W("#downpayment")), oa = Y(c - f)) : (oa = Y(W("#downpayment")), w = Z(100 * oa.replace(/[^\d\.]/g, "") / c)), g = 1 * oa.replace(/[^\d\.]/g, ""), h = Math.abs(jQuery("#mortgageinterest").val() / 12 / 100), 0 == h && (V(jQuery("#mortgageinterest"), 5), h = .00416666666), jQuery("#mortgagecalculatorform input[name='hoientry']")[0].checked ? (n = Math.abs(W("#hoi") / 26 / 100), ma = Z(W("#hoi")), na = Y(2600 * n / 100 * c)) : (n = Math.abs(100 * W("#hoi") / c / 26 / 100), na = Y(W("#hoi")), ma = Z(2600 * n)), jQuery("#mortgagecalculatorform input[name='propertytaxesentry']")[0].checked ? (m = Math.abs(W("#propertytaxes") / 26 / 100), la = Z(W("#propertytaxes")), ka = Y(2600 * m / 100 * c)) : (m = Math.abs(100 * W("#propertytaxes") / c / 26 / 100), ka = Y(W("#propertytaxes")), la = Z(2600 * m)), jQuery("#mortgagecalculatorform input[name='pmientry']")[0].checked ? (p = Math.abs(W("#pmi") / 26 / 100), ga = Z(W("#pmi")), fa = Y(2600 * p / 100 * f)) : (p = Math.abs(100 * W("#pmi") / f / 26 / 100), fa = Y(W("#pmi")), ga = Z(2600 * p)), jQuery("#mortgagecalculatorform input[name='onetimeexpensesentry']")[0].checked ? (ja = Z(W("#onetimeexpenses")), ia = Y(ja / 100 * c)) : (ia = Y(W("#onetimeexpenses")), ja = Z(100 * ia.replace(/[^\d\.]/g, "") / c)), ba = 1 * ia.replace(/[^\d\.]/g, ""), q = Math.abs(12 * W("#hoad") / 26), jQuery("#mortgagecalculatorform input[name='mortgagetenure']")[0].checked ? (0 >= jQuery("#mortgageterm").val() && Ja(jQuery("#mortgageterm"), 30, 360), k = Math.abs(Math.round(12 * jQuery("#mortgageterm").val()))) : (0 >= jQuery("#mortgageterm").val() && Ja(jQuery("#mortgageterm"), 360), k = Math.abs(1 * jQuery("#mortgageterm").val())), A = W("#extraperiodic"), C = W("#extraquarterly"), B = W("#extrayearly"), pa = W("#extraonetime"), E = !1, (A || B || pa || C) && (E = !0), E && jQuery(".addextrapayments").is(":visible") && (jQuery("#extrapayments").slideToggle(), jQuery(".addextrapayments").toggle(), jQuery(".removeextrapayments").toggle()), E && hb(), l = Math.pow(1 + h, k) / (Math.pow(1 + h, k) - 1) * h * f, l *= .5, periodicPayment = l + A + c * m + c * n + f * p + q, jQuery("#periodicprincipalandinterestterm").text("Bi-weekly Principal & Interest"), jQuery("#periodicterm").text("Total Bi-weekly Payment"), jQuery("#periodicprincipalandinterestdef").text(Globalize.format(l, "c", "en-US")), jQuery("#extradef").text(Globalize.format(A, "c", "en-US")), jQuery("#periodicpropertytaxesdef").text(Globalize.format(ka.replace(/[^\d\.]/g, "") / 26, "c", "en-US")), jQuery("#periodichoidef").text(Globalize.format(na.replace(/[^\d\.]/g, "") / 26, "c", "en-US")), jQuery("#periodicpmidef").text(f > .8 * c ? Globalize.format(fa.replace(/[^\d\.]/g, "") / 26, "c", "en-US") : Globalize.format(0, "c", "en-US")), jQuery("#periodichoaddef").text(Globalize.format(q, "c", "en-US")), jQuery("#periodicpayment").text(Globalize.format(periodicPayment, "c", "en-US")), G = [], H = [], I = [], K = [], J = [], L = [], Da = [], M = [], N = [], S = [], O = [], P = [], Q = [], T = [], D = v = u = t = 0, da = ea = null, sa = ra = !1, qa = k, e = Math.abs(jQuery("#mortgageinterest").val() / 26 / 100), xa.c = new Date(F.c.getTime()), ya.c = null, za.c = null, Aa.c = null, E && (C > 0 && (ya.c = new Date(ua.c.getTime())), B > 0 && (za.c = new Date(va.c.getTime())), pa > 0 && (Aa.c = new Date(wa.c.getTime()))), M[0] = new Date(xa.c.getTime()), S[0] = 0, pb(M[0], 0, e), E && (C > 0 || B > 0 || pa > 0) && (S[0] = S[0] + mb(M[0]) + nb(M[0]) + ob(M[0])), Q[0] = f - N[0] - S[0], T[0] = (f - Q[0]) / f * 100, a = M[0].getFullYear(), r = 0, G[r++] = a, H[a] = N[0], I[a] = O[0], K[a] = S[0], J[a] = P[0], L[a] = Q[0], Da[a] = T[0], t += N[0], u += O[0], v += P[0], D += S[0]; var o = 1, i = 1, s = new Date(F.c.getTime()); for (s.setMonth(s.getMonth() + k); 0 < Q[o - 1] && xa.c.getTime() < s.getTime();) { var d, y = M, b = o; if (E && (C > 0 || B > 0 || pa > 0)) { d = xa; var j = ya, x = za, U = Aa, X = []; d.c && X.push(d.c), j.c && X.push(j.c), x.c && X.push(x.c), U.c && X.push(U.c), d = new Date(Math.min.apply(null, X)) } else d = new Date(xa.c.getTime()); y[b] = d, S[o] = 0, pb(M[o], o, e), E && (C > 0 || B > 0 || pa > 0) && (S[o] = S[o] + mb(M[o]) + nb(M[o]) + ob(M[o])), Q[o - 1] < N[o] + S[o] && (Q[o - 1] < N[o] && (N[o] = Q[o - 1]), S[o] = Q[o - 1] - N[o]), Q[o] = Q[o - 1] - N[o] - S[o], T[o] = (f - Q[o]) / f * 100, M[o].getFullYear() != a && (a = M[o].getFullYear(), G[r++] = a, H[a] = 0, I[a] = 0, K[a] = 0, J[a] = 0, L[a] = 0, i = Da[a] = 0), i++ , 27 === i && (P[o] = 0), H[a] += N[o], I[a] += O[o], K[a] += S[o], J[a] += P[o], L[a] = Q[o], Da[a] = T[o], t += N[o], u += O[o], v += P[o], D += S[o], o++ } qa = M.length, ea = M[qa - 1], Q[qa - 1] = 0, L[a] = 0, T[qa - 1] = 100, Da[a] = 100 } if (jQuery("#downpaymentdef").text(Globalize.format(g + ba, "c", "en-US")), jQuery("#totalprincipaldef").text(Globalize.format(t, "c", "en-US")), jQuery("#totalinterestdef").text(Globalize.format(u, "c", "en-US")), jQuery("#totalextradef").text(Globalize.format(D, "c", "en-US")), jQuery("#totalinsuranceandtaxesdef").text(Globalize.format(v, "c", "en-US")), jQuery("#totalpayment").text(Globalize.format(g + ba + t + D + u + v, "c", "en-US")), jQuery("#periodicpmiterm").text(p > 0 && da ? "PMI (till " + cb(da) + ")" : "PMI"), jQuery("#extraterm").text(12 == ca ? A ? "Monthly Extra Payment (from " + cb(ta.c) + ")" : "Monthly Extra Payment" : A ? "Bi-weekly Extra Payment (from " + cb(ta.c) + ")" : "Bi-weekly Extra Payment"), jQuery("#startdatetext").text(cb(F.c)), jQuery("#enddatetext").text(cb(ea)), qb(), rb(), sb(), 12 === ca) { e = { Monthly: 12, "Bi-weekly": 26 }, a = { Monthly: 1, "Bi-weekly": .5 }, z = '<table><tr><th id="paymentfrequencyheader">Payment Frequency</th><th id="numberofpaymentsheader" class="hidden-xs">Payments / year</th><th id="paymentheader">Payment</th><th id="paymentheader">Total Extra Payments</th><th id="totalinterestheader">Total Savings</th><th id="<amortizationheader">Amortization Period</th></tr>'; var $, o = r = 0; for ($ in e) s = l * a[$], i = s + 12 * (periodicPayment - A - l) / e[$], y = Math.abs(jQuery("#mortgageinterest").val()) / e[$] / 100, y = Math.round(Math.log(s / (s - f * y)) / Math.log(1 + y)), s = s * y - f, 0 === r && (o = s, r++), y /= e[$], z += '<tr><td class="paymentfrequency">' + $ + '</td><td class="hidden-xs num">' + e[$] + '</td><td class="currency">' + Globalize.format(i, "c", "en-US") + '</td><td class="currency">' + Globalize.format(0, "c", "en-US") + '</td><td class="currency">' + Globalize.format(o - s, "c", "en-US") + '</td><td class="num">' + tb(y) + "</td></tr>"; E && (z += '<tr><td class="paymentfrequency">Monthly (With Extra Payments)</td><td class="hidden-xs num">12</td><td class="currency">' + Globalize.format(periodicPayment, "c", "en-US") + '</td><td class="currency">' + Globalize.format(D, "c", "en-US") + '</td><td class="currency">' + Globalize.format(o - u, "c", "en-US") + '</td><td class="num">' + tb(($a(F.c, ea) + 1) / 12) + "</td></tr>") } else { e = { Monthly: 12, "Bi-weekly": 26 }, a = { Monthly: 2, "Bi-weekly": 1 }, z = '<table><tr><th id="paymentfrequencyheader">Payment Frequency</th><th id="numberofpaymentsheader" class="hidden-xs">Payments / year</th><th id="paymentheader">Payment</th><th id="paymentheader">Total Extra Payments</th><th id="totalinterestheader">Total Savings</th><th id="<amortizationheader">Amortization Period</th></tr>', o = r = 0; for ($ in e) s = l * a[$], i = s + 26 * (periodicPayment - A - l) / e[$], y = Math.abs(jQuery("#mortgageinterest").val()) / e[$] / 100, y = Math.round(Math.log(s / (s - f * y)) / Math.log(1 + y)), s = s * y - f, 0 === r && (o = s, r++), y /= e[$], z += '<tr><td class="paymentfrequency">' + $ + '</td><td class="hidden-xs num">' + e[$] + '</td><td class="currency">' + Globalize.format(i, "c", "en-US") + '</td><td class="currency">' + Globalize.format(0, "c", "en-US") + '</td><td class="currency">' + Globalize.format(o - s, "c", "en-US") + '</td><td class="num">' + tb(y) + "</td></tr>"; E && (z += '<tr><td class="paymentfrequency">Bi-weekly (With Extra Payments)</td><td class="hidden-xs num">26</td><td class="currency">' + Globalize.format(periodicPayment, "c", "en-US") + '</td><td class="currency">' + Globalize.format(D, "c", "en-US") + '</td><td class="currency">' + Globalize.format(o - u, "c", "en-US") + '</td><td class="num">' + tb(($a(F.c, ea) + 1) / 12) + "</td></tr>") } z += "</table>", jQuery("#paymentscomparisontable").html(z), jQuery("#mortgagecalculatorform").unmask() } function hb() { ta.c.getTime() < F.c.getTime() && jQuery("#extraperiodicstartdate").datepicker("setDate", new Date(F.c.getTime())), va.c.getTime() < F.c.getTime() && jQuery("#extrayearlystartdate").datepicker("setDate", new Date(F.c.getTime())), ua.c.getTime() < F.c.getTime() && jQuery("#extraquarterlystartdate").datepicker("setDate", new Date(F.c.getTime())), wa.c.getTime() < F.c.getTime() && jQuery("#extraonetimestartdate").datepicker("setDate", new Date(F.c.getTime())) } function mb(e) { if (pa > 0 && !ra) if (12 == ca) { if (0 == $a(wa.c, e)) return ra = !0, pa } else if (wa.c.getTime() === e.getTime()) return ra = !0, Aa.c = null, pa; return 0 } function nb(e) { if (12 == ca) { if (B > 0 && 0 <= $a(va.c, e) && 0 == $a(va.c, e) % 12) return B } else if (B > 0 && e.getTime() === za.c.getTime()) return za.c.setMonth(za.c.getMonth() + 12), B; return 0 } function ob(e) { if (12 == ca) { if (C > 0 && 0 <= $a(ua.c, e) && 0 == $a(ua.c, e) % 3) return C } else if (C > 0 && e.getTime() === ya.c.getTime()) return ya.c.setMonth(ya.c.getMonth() + 3), C; return 0 } function lb(e) { if (A > 0) if (12 == ca) { if (sa || 0 <= $a(ta.c, e)) return sa = !0, A } else if (sa || e.getTime() >= ta.c.getTime()) return sa || (jQuery("#extraperiodicstartdate").datepicker("setDate", e), sa = !0), A; return 0 } function pb(e, t, a) { e.getTime() === xa.c.getTime() ? (0 === t ? (O[t] = f * a, N[t] = l - O[t], P[t] = f > .8 * c ? c * m + c * n + q + f * p : c * m + c * n + q) : (O[t] = Q[t - 1] * a, N[t] = l - O[t], !da && Q[t - 1] > .8 * c ? P[t] = c * m + c * n + q + f * p : (!da && 0 < P[t - 1] ? da = M[t - 1] : da || (da = M[t - 2]), P[t] = c * m + c * n + q)), A > 0 && (S[t] = lb(e)), xa.c.setDate(xa.c.getDate() + 14)) : (O[t] = 0, N[t] = 0, P[t] = 0, S[t] = 0) } function qb() { new Highcharts.Chart({ chart: { renderTo: "totalmortgagechart", backgroundColor: "transparent", plotBackgroundColor: "transparent", borderWidth: null, plotBorderWidth: null, plotShadow: !1, margin: [0, 0, 0, 0], spacing: [0, 0, 0, 0] }, title: { text: "Total<br/>of all<br/>Payments", align: "center", verticalAlign: "middle", y: -15, x: 0 }, tooltip: { formatter: function () { return this.point.name + ": " + Math.round(this.percentage) + "%" } }, plotOptions: { pie: { size: "100%", colors: ["#B8204C", "#88A825", "#CF4A30", "#ED8C2B", "#5E3969"], innerSize: "70%", allowPointSelect: !0, cursor: "pointer", dataLabels: { enabled: !1 }, showInLegend: !1 } }, series: [{ type: "pie", name: "Total of Payments", data: [["Down Payment & <br/>One-time Expenses", Math.round(g + ba)], ["Principal", Math.round(t)], ["Extra Payments", Math.round(D)], ["Interest", Math.round(u)], ["Taxes, PMI, Insurance & <br/>Fees", Math.round(v)]] }] }) } function rb() { for (var e = [], t = [], a = [], r = [], n = [], o = [], c = 0, c = 0, i = G.length; i > c; c++) { var l = G[c]; e[c] = l, t[c] = H[l], a[c] = I[l], r[c] = K[l], n[c] = J[l], o[c] = L[l] } new Highcharts.Chart({ chart: { renderTo: "paymentschedulechart", defaultSeriesType: "column", backgroundColor: "transparent", plotBackgroundColor: "transparent", borderWidth: null, plotBorderWidth: null, plotShadow: !1, C: 0, G: 0 }, title: { text: "" }, xAxis: { categories: e, minorTickInterval: "auto", tickmarkPlacement: "on", labels: { rotation: -45, align: "right", step: 8 < G.length ? 2 : 1, style: { font: "normal 9px Verdana, sans-serif" }, formatter: function () { return this.value } } }, yAxis: [{ min: 0, title: { text: "Mortgage Payment / year" }, stackLabels: { enabled: !1, style: { fontWeight: "bold", color: Highcharts.theme && Highcharts.theme.j || "gray" } }, opposite: !0, labels: { formatter: function () { return "" + Globalize.format(this.value, "c0", "en-US") } } }, { min: 0, title: { text: "Balance" }, stackLabels: { enabled: !1, style: { fontWeight: "bold", color: Highcharts.theme && Highcharts.theme.j || "gray" } }, labels: { formatter: function () { return "" + Globalize.format(this.value, "c0", "en-US") } } }], legend: { align: "center", itemMarginBottom: 2, itemMarginTop: 2, verticalAlign: "bottom", floating: !1, backgroundColor: "#EEEEEE", shadow: !1 }, tooltip: { formatter: function () { return "Balance" == this.series.name ? "<b>Year: " + this.x + "</b><br/>" + this.series.name + ": " + Globalize.format(this.y, "c", "en-US") + "<br/>Loan Paid To Date: " + Z((f - this.y) / f * 100, 2) + "%" : "<b>Year: " + this.x + "</b><br/>" + this.series.name + ": " + Globalize.format(this.y, "c", "en-US") + "<br/>Total Payment: " + Globalize.format(this.point.stackTotal, "c", "en-US") } }, plotOptions: { column: { borderWidth: 0, stacking: "normal", dataLabels: { enabled: !1, color: Highcharts.theme && Highcharts.theme.u || "white" } } }, series: [{ name: "Interest", data: a, yAxis: 0, legendIndex: 3 }, { name: "Principal", data: t, yAxis: 0, legendIndex: 1 }, { name: "Extra Payments", data: r, yAxis: 0, legendIndex: 2 }, { name: "Taxes, PMI, Insurance & Fees", data: n, yAxis: 0, legendIndex: 4 }, { name: "Balance", data: o, type: "spline", yAxis: 1, legendIndex: 5 }] }) } function sb() { if (D > 0) { y = '<table><tr><th class="col-xs-2 col-md-1" id="yearheader">Year</th><th class="col-xs-3 col-md-2" id="principalheader">Principal<br/>(A)</th><th class="col-xs-2 col-md-1" id="extrastheader">Extra Payments<br/>(B)</th><th class="col-xs-3 col-md-2" id="interestheader">Interest<br/>(C)</th><th class="col-xs-2 col-md-1" id="insuranceandtaxesheader">Taxes, PMI, Insurance & Fees (D)</th><th class="hidden-xs hidden-sm col-md-2" id="totalheader">Total Payment<br/>(A + B + C + D)</th><th class="hidden-xs hidden-sm col-md-2" id="balanceheader">Balance</th><th class="hidden-xs hidden-sm col-md-1" id="paidtodateheader">Loan Paid To Date</th></tr>'; for (var e = 0, t = 0, a = G.length; a > t; t++) { var r = G[t]; for (y += '<tr class="yearlypaymentdetails"><td id="year' + r + '" class="col-xs-2 col-md-1 paymentyear toggle">' + r + '</td><td class="col-xs-3 col-md-2 currency">' + Globalize.format(H[r], "c", "en-US") + '</td><td class="col-xs-2 col-md-1 currency">' + Globalize.format(K[r], "c", "en-US") + '</td><td class="col-xs-3 col-md-2 currency">' + Globalize.format(I[r], "c", "en-US") + '</td><td class="col-xs-2 col-md-1 currency">' + Globalize.format(J[r], "c", "en-US") + '</td><td class="hidden-xs hidden-sm col-md-2 currency">' + Globalize.format(H[r] + I[r] + J[r] + K[r], "c", "en-US") + '</td><td class="hidden-xs hidden-sm col-md-2 currency">' + Globalize.format(L[r], "c", "en-US") + '</td><td class="hidden-xs hidden-sm col-md-1 paidtodateyear">' + Z(Da[r], 2) + "%</td></tr>", y += '<tr id="monthyear' + r + '" class="periodicpaymentdetails"><td class="row monthyearwrapper" colspan="8"><div class="periodicpaymentcontainer"><table>'; qa > e && M[e].getFullYear() == r;)y += '<tr><td class="col-xs-2 col-md-1 paymentmonthyear">' + db(M[e]) + '</td><td class="col-xs-3 col-md-2 currency">' + Globalize.format(N[e], "c", "en-US") + '</td><td class="col-xs-2 col-md-1 currency">' + Globalize.format(S[e], "c", "en-US") + '</td><td class="col-xs-3 col-md-2 currency">' + Globalize.format(O[e], "c", "en-US") + '</td><td class="col-xs-2 col-md-1 currency">' + Globalize.format(P[e], "c", "en-US") + '</td><td class="hidden-xs hidden-sm col-md-2 currency">' + Globalize.format(N[e] + O[e] + P[e] + S[e], "c", "en-US") + '</td><td class="hidden-xs hidden-sm col-md-2 currency">' + Globalize.format(Q[e], "c", "en-US") + '</td><td class="hidden-xs hidden-sm col-md-1 paidtodatemonthyear">' + Z(T[e++], 2) + "%</td></tr>"; y += "</table></div></td></tr>" } } else for (y = '<table class="noextras"><tr><th class="col-xs-3 col-sm-2 col-md-1" id="yearheader">Year</th><th class="col-xs-3 col-sm-2" id="principalheader">Principal<br/>(A)</th><th class="col-xs-3 col-sm-2" id="interestheader">Interest<br/>(B)</th><th class="col-xs-3 col-md-2" id="insuranceandtaxesheader">Taxes, PMI, Insurance & Fees (C)</th><th class="hidden-xs hidden-sm col-md-2" id="totalheader">Total Payment<br/>(A + B + C)</th><th class="hidden-xs col-sm-3 col-md-2" id="balanceheader">Balance</th><th class="hidden-xs hidden-sm col-md-1" id="paidtodateheader">Loan Paid To Date</th></tr>', t = e = 0, a = G.length; a > t; t++) { for (r = G[t], y += '<tr class="yearlypaymentdetails"><td id="year' + r + '" class="col-xs-3 col-sm-2 col-md-1 paymentyear toggle">' + r + '</td><td class="col-xs-3 col-sm-2 currency">' + Globalize.format(H[r], "c", "en-US") + '</td><td class="col-xs-3 col-sm-2 currency">' + Globalize.format(I[r], "c", "en-US") + '</td><td class="col-xs-3 col-md-2 currency">' + Globalize.format(J[r], "c", "en-US") + '</td><td class="hidden-xs hidden-sm col-md-2 currency">' + Globalize.format(H[r] + I[r] + J[r] + K[r], "c", "en-US") + '</td><td class="hidden-xs col-sm-3 col-md-2 currency">' + Globalize.format(L[r], "c", "en-US") + '</td><td class="hidden-xs hidden-sm col-md-1 paidtodateyear">' + Z(Da[r], 2) + "%</td></tr>", y += '<tr id="monthyear' + r + '" class="periodicpaymentdetails"><td class="row monthyearwrapper" colspan="8"><div class="periodicpaymentcontainer"><table>'; qa > e && M[e].getFullYear() == r;)y += '<tr><td class="col-xs-3 col-sm-2 col-md-1 paymentmonthyear">' + db(M[e]) + '</td><td class="col-xs-3 col-sm-2 currency">' + Globalize.format(N[e], "c", "en-US") + '</td><td class="col-xs-3 col-sm-2 currency">' + Globalize.format(O[e], "c", "en-US") + '</td><td class="col-xs-3 col-md-2 currency">' + Globalize.format(P[e], "c", "en-US") + '</td><td class="hidden-xs hidden-sm col-md-2 currency">' + Globalize.format(N[e] + O[e] + P[e] + S[e], "c", "en-US") + '</td><td class="hidden-xs col-sm-3 col-md-2 currency">' + Globalize.format(Q[e], "c", "en-US") + '</td><td class="hidden-xs hidden-sm col-md-1 paidtodatemonthyear">' + Z(T[e++], 2) + "%</td></tr>"; y += "</table></div></td></tr>" } y += "</table>", jQuery("#paymentschedule").html(y), jQuery("#paymentschedule tr.periodicpaymentdetails").find("div").hide(), jQuery("#paymentschedule td.toggle").click(function () { var e = jQuery(this).attr("id"); jQuery(this).toggleClass("toggle-open"), jQuery("tr#month" + e).find("div").slideToggle() }) } function tb(e) { var t = Math.floor(e); return e = Math.round(e % 1 * 12), e > 0 ? "" + t + "y " + e + "m" : "" + t + "y" } var c, f, g, ba, h, ca, k, l, m, n, p, da, ea, q, t, u, v, fa, ga, ia, ja, ka, la, ma, na, w, oa, y, z, A = 0, B = 0, C = 0, pa = 0, D = 0, E = !1, qa = 0, ra = !1, sa = !1, F = { c: new Date }, ta = { c: new Date }, ua = { c: new Date }, va = { c: new Date }, wa = { c: new Date }, xa = { c: new Date }, ya = { c: new Date }, za = { c: new Date }, Aa = { c: new Date }, Ba, Ca, G = [], H = [], I = [], J = [], K = [], L = [], Da = [], M = [], N = [], O = [], P = [], Q = [], S = [], T = [], Ea = "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "); jQuery(document).ready(function () {
    Fa("#startdate", F), Fa("#extraperiodicstartdate", ta), Fa("#extraquarterlystartdate", ua), Fa("#extrayearlystartdate", va), Fa("#extraonetimestartdate", wa); var e = jQuery("#mortgagedata").val(); "" != e ? (e = jQuery.parseJSON(decodeURIComponent(escape(Base64.decode(e)))), Ga(e), Ha("#startdate"), Ha("#extraperiodicstartdate"), Ha("#extraquarterlystartdate"), Ha("#extrayearlystartdate"), Ha("#extraonetimestartdate")) : (U(jQuery("#homeprice"), 35e4), jQuery("#mortgagecalculatorform input[name='downpaymententry']")[0].checked ? V(jQuery("#downpayment"), 12, Math.abs(42e3)) : U(jQuery("#downpayment"), 42e3, Math.abs(12)), U(jQuery("#mortgageamount"), 308e3), U(jQuery("#hoad"), 0), V(jQuery("#mortgageinterest"), 5), jQuery('input[name="paymentfrequency"][value="monthly"]').prop("checked", !0), e = jQuery('input[name="paymentfrequency"][value="monthly"]'), jQuery(e).parent(".btn").addClass("active"), jQuery(e).parent(".btn").siblings().removeClass("active"), jQuery("#mortgagecalculatorform input[name='hoientry']")[0].checked ? V(jQuery("#hoi"), .35, Math.abs(35e4 * .35 / 100)) : U(jQuery("#hoi"), 1225, Math.abs(.35)), jQuery("#mortgagecalculatorform input[name='propertytaxesentry']")[0].checked ? V(jQuery("#propertytaxes"), 1.25, Math.abs(4375)) : U(jQuery("#propertytaxes"), 4375, Math.abs(1.25)), jQuery("#mortgagecalculatorform input[name='pmientry']")[0].checked ? V(jQuery("#pmi"), .625, Math.abs(1925)) : U(jQuery("#pmi"), 1925, Math.abs(.625)), jQuery("#mortgagecalculatorform input[name='onetimeexpensesentry']")[0].checked ? V(jQuery("#onetimeexpenses"), 3, Math.abs(10500)) : U(jQuery("#onetimeexpenses"), 10500, Math.abs(3)), jQuery("#mortgagecalculatorform input[name='mortgagetenure']")[0].checked ? Ja(jQuery("#mortgageterm"), 30, 360) : Ja(jQuery("#mortgageterm"), 360), U(jQuery("#extraperiodic"), 0), U(jQuery("#extraquarterly"), 0), U(jQuery("#extrayearly"), 0), U(jQuery("#extraonetime"), 0)), U(jQuery("#homeprice"), W("#homeprice")), jQuery("#mortgagecalculatorform input[name='downpaymententry']")[0].checked ? V(jQuery("#downpayment"), W("#downpayment"), Math.abs(W("#homeprice") * W("#downpayment") / 100)) : U(jQuery("#downpayment"), W("#downpayment"), Math.abs(100 * W("#downpayment") / W("#homeprice"))), U(jQuery("#mortgageamount"), W("#mortgageamount")), U(jQuery("#hoad"), W("#hoad")), V(jQuery("#mortgageinterest"), W("#mortgageinterest")), jQuery("#mortgagecalculatorform input[name='hoientry']")[0].checked ? V(jQuery("#hoi"), W("#hoi"), Math.abs(W("#homeprice") * W("#hoi") / 100)) : U(jQuery("#hoi"), W("#hoi"), Math.abs(100 * W("#hoi") / W("#homeprice"))), jQuery("#mortgagecalculatorform input[name='propertytaxesentry']")[0].checked ? V(jQuery("#propertytaxes"), W("#propertytaxes"), Math.abs(W("#homeprice") * W("#propertytaxes") / 100)) : U(jQuery("#propertytaxes"), W("#propertytaxes"), Math.abs(100 * W("#propertytaxes") / W("#homeprice"))), jQuery("#mortgagecalculatorform input[name='pmientry']")[0].checked ? V(jQuery("#pmi"), W("#pmi"), Math.abs(W("#mortgageamount") * W("#pmi") / 100)) : U(jQuery("#pmi"), W("#pmi"), Math.abs(100 * W("#pmi") / W("#mortgageamount"))), jQuery("#mortgagecalculatorform input[name='onetimeexpensesentry']")[0].checked ? V(jQuery("#onetimeexpenses"), W("#onetimeexpenses"), Math.abs(W("#homeprice") * W("#onetimeexpenses") / 100)) : U(jQuery("#onetimeexpenses"), W("#onetimeexpenses"), Math.abs(100 * W("#onetimeexpenses") / W("#homeprice"))), jQuery("#mortgagecalculatorform input[name='mortgagetenure']")[0].checked ? Ja(jQuery("#mortgageterm"), Math.abs(Math.round(Math.round(12 * W("#mortgageterm")) / 12 * 100) / 100)) : Ja(jQuery("#mortgageterm"), Math.abs(Math.round(W("#mortgageterm")))), U(jQuery("#extraperiodic"), W("#extraperiodic")), U(jQuery("#extraquarterly"), W("#extraquarterly")), U(jQuery("#extrayearly"), W("#extrayearly")), U(jQuery("#extraonetime"), W("#extraonetime")), Ka(), jQuery(".dollaramount").change(La), jQuery(".dollaramount").bindWithDelay("keyup", La, 3e3), jQuery("#hoad").change(Ma), jQuery("#hoad").bindWithDelay("keyup", Ma, 3e3), jQuery("#homeprice").change(Na), jQuery("#homeprice").bindWithDelay("keyup", Na, 3e3), jQuery("#downpayment").change(Oa), jQuery("#downpayment").bindWithDelay("keyup", Oa, 3e3), jQuery("#mortgageamount").change(Pa), jQuery("#mortgageamount").bindWithDelay("keyup", Pa, 3e3), jQuery("#mortgageinterest").change(Ra), jQuery("#mortgageinterest").bindWithDelay("keyup", Ra, 3e3), jQuery("#mortgageterm").change(Sa), jQuery("#mortgageterm").bindWithDelay("keyup", Sa, 3e3), jQuery("#hoi").change(Ta), jQuery("#hoi").bindWithDelay("keyup", Ta, 3e3), jQuery("#propertytaxes").change(Ua), jQuery("#propertytaxes").bindWithDelay("keyup", Ua, 3e3), jQuery("#pmi").change(Va), jQuery("#pmi").bindWithDelay("keyup", Va, 3e3), jQuery("#onetimeexpenses").change(Wa), jQuery("#onetimeexpenses").bindWithDelay("keyup", Wa, 3e3), Xa(), Ya(), Za(), X()
});